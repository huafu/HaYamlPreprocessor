name: Generate Release

on:
  push:
    branches:
      - main

jobs:
  generate_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # needed to fetch tags

      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Read current version from manifest.json
        id: get_version
        run: |
          manifest_file="custom_components/yaml_preprocessor/manifest.json"
          if [ ! -f "$manifest_file" ]; then
            echo "Error: $manifest_file not found!"
            exit 1
          fi
          VERSION=$(jq -r '.version' "$manifest_file")
          echo "Current version is ${VERSION}"
          echo "::set-output name=version::${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Set release tag environment variable
        run: |
          TAG="v${VERSION}"
          echo "TAG is ${TAG}"
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Check if tag exists
        id: tag_check
        run: |
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists"
            echo "::set-output name=exists::true"
          else
            echo "Tag $TAG does not exist"
            echo "::set-output name=exists::false"
          fi

      - name: Create and push tag if not exists
        if: steps.tag_check.outputs.exists == 'false'
        run: |
          git tag "$TAG"
          git push origin "$TAG"

      - name: Extract release notes from CHANGELOG.md
        run: |
          # Extract from the line starting with "## vX.X.X" until the next header.
          # If no content is extracted, fall back to a default message.
          sed -n "/^## ${TAG}/,/^## /p" CHANGELOG.md > release_notes.md
          if [ ! -s release_notes.md ]; then
            echo "No specific release notes found for ${TAG}." > release_notes.md
          fi
          echo "Release notes extracted:"
          cat release_notes.md

      - name: Create GitHub Release
        if: steps.tag_check.outputs.exists == 'false'
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }} Release
          body_path: release_notes.md
          files: |
            hacs.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
